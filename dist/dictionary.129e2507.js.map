{"mappings":"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","sources":["public/dictionary.js"],"sourcesContent":["const btn = document.getElementById(\"submitButton\");\r\nconst searchResultContainer = document.getElementById(\"definitionsContainer\")\r\n\r\n\r\n//DICTIONARY \r\nvar api = \"https://api.dictionaryapi.dev/api/v2/entries/en/\"\r\n//add word thats getting looked up at the end of the link\r\n\r\nlet amountOfClicks = 0;\r\n\r\nbtn.addEventListener('click', () => {\r\n  amountOfClicks++;\r\n  if (amountOfClicks >= 1) {\r\n    //when user searches a new word, reset the search results and render the new one\r\n    resetSearchContainer(searchResultContainer);\r\n    amountOfClicks = 0;\r\n  }\r\n  console.log(\"click has been detected\");\r\n  const searchedWord = document.getElementById(\"searchedWord\");\r\n  getDefinition(searchedWord.value);\r\n});\r\n\r\n\r\n\r\n\r\nfunction getDefinition(word) {\r\n  var link = api + word;\r\n  //find all required information from api for the word being searched\r\n  console.log(link);\r\n  fetch(link)\r\n    .then(response => { \r\n      return response.json()\r\n    })\r\n    .then(data => {\r\n      //console.log(data[0].meanings[0].definitions[0].definition);\r\n      renderDefinition(data);\r\n    })\r\n    \r\n    //.then((wordInput) => renderDefinition(wordInput))\r\n};\r\n\r\n\r\n\r\n\r\nfunction renderDefinition(wordData) {\r\n  //maybe try storing info into one word object, then iterate through appending each one to be displayed\r\n  \r\n  //get information about word searched and show on screen\r\n  console.log(wordData[0]);\r\n\r\n  //Display following info from the api:\r\n  //Name of word that got searched\r\n  let wordGettingDefined = document.createElement(\"h1\");\r\n  wordGettingDefined.innerHTML = wordData[0].word;\r\n  searchResultContainer.appendChild(wordGettingDefined);\r\n\r\n  //the words function (adjective, adverb, noun, etc)\r\n  let wordType = document.createElement(\"p\");\r\n  wordType.innerHTML = wordData[0].meanings[0].partOfSpeech;\r\n  searchResultContainer.appendChild(wordType);\r\n\r\n  //separate information to make it more readable\r\n  let line = document.createElement(\"hr\");\r\n  searchResultContainer.appendChild(line);\r\n  \r\n  //word definition\r\n  let wordDefinition = document.createElement(\"p\");\r\n  wordDefinition.innerHTML = wordData[0].meanings[0].definitions[0].definition;\r\n  searchResultContainer.appendChild(wordDefinition);\r\n\r\n\r\n  //For Synonyms\r\n  let synonymHeading = document.createElement(\"h3\");\r\n  synonymHeading.innerHTML = \"Synonyms\";\r\n  searchResultContainer.appendChild(synonymHeading);\r\n\r\n  findSynonyms(wordData);\r\n  \r\n}\r\n\r\n\r\n//Find where synonyms are located in the api\r\nfunction findSynonyms(wordInput) {\r\n  //loop through all meanings\r\n  for (let j = 0; j < wordInput[0].meanings.length; j++) {\r\n    let synonymArrayLocation = Object.keys(wordInput[0].meanings[j]);\r\n      for (let i = 0; i < synonymArrayLocation.length - 1; i++) {\r\n        if (synonymArrayLocation[i] == \"synonyms\" && wordInput[0].meanings[j].synonyms.length > 0) {\r\n          console.log(\"synonyms are being checked\");\r\n          let synonymLocation = wordInput[0].meanings[j].synonyms;\r\n          printSynonyms(synonymLocation);\r\n        }\r\n      }\r\n  }\r\n}\r\n\r\n\r\n//Display synonyms to page\r\nfunction printSynonyms(synonymArray) {\r\n  let synonymContainer = document.createElement(\"div\");\r\n  synonymContainer.classList.add(\"synonymsContainer\");\r\n  searchResultContainer.appendChild(synonymContainer);\r\n  for (let i = 0; i < synonymArray.length; i++) {\r\n    let synonym = document.createElement(\"p\");\r\n    synonym.innerHTML = synonymArray[i];\r\n    synonym.classList.add(\"synonym\")\r\n    synonymContainer.appendChild(synonym);\r\n    \r\n  }\r\n}\r\n\r\n\r\n//wipe previous search information to display next searched word\r\nfunction resetSearchContainer(searchResultContainer) {\r\n  //removes all child nodes of the search container\r\n    while (searchResultContainer.firstChild) {\r\n        searchResultContainer.removeChild(searchResultContainer.firstChild);\r\n    }\r\n}\r\n"],"names":[],"version":3,"file":"dictionary.129e2507.js.map","sourceRoot":"/__parcel_source_root/"}